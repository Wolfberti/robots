from Servo import Servo
from time import sleep

#parameters
servo_delay = .05
activation_scale = 75.0

activation_array = [
[78,-0.63,-0.65,-0.62,-0.58,-0.55,-0.51,-0.48,-0.44,-0.41,-0.37,-0.34,-0.30],
[219,-0.63,-0.65,-0.62,-0.58,-0.55,-0.51,-0.48,-0.44,-0.41,-0.37,-0.34,-0.30],
[375,-0.63,-0.65,-0.62,-0.58,-0.55,-0.51,-0.48,-0.44,-0.41,-0.37,-0.34,-0.30],
[531,0.63,0.00,-0.62,-0.58,-0.55,-0.51,-0.48,-0.44,-0.41,-0.37,-0.34,-0.30],
[672,0.63,0.65,-0.62,-0.58,-0.55,-0.51,-0.48,-0.44,-0.41,-0.37,-0.34,-0.30],
[812,0.63,0.65,0.00,-0.58,-0.55,-0.51,-0.48,-0.44,-0.41,-0.37,-0.34,-0.30],
[937,0.63,0.65,0.62,-0.58,-0.55,-0.51,-0.48,-0.44,-0.41,-0.37,-0.34,-0.30],
[1047,0.63,0.65,0.62,0.00,-0.55,-0.51,-0.48,-0.44,-0.41,-0.37,-0.34,-0.30],
[1156,0.63,0.65,0.62,0.58,-0.55,-0.51,-0.48,-0.44,-0.41,-0.37,-0.34,-0.30],
[1344,0.63,0.65,0.62,0.58,0.55,-0.51,-0.48,-0.44,-0.41,-0.37,-0.34,-0.30],
[1515,-0.63,0.65,0.62,0.58,0.55,0.51,-0.48,-0.44,-0.41,-0.37,-0.34,-0.30],
[1672,-0.63,0.65,0.62,0.58,0.55,0.51,0.00,-0.44,-0.41,-0.37,-0.34,-0.30],
[1781,-0.63,0.00,0.62,0.58,0.55,0.51,0.48,-0.44,-0.41,-0.37,-0.34,-0.30],
[1906,-0.63,-0.65,0.62,0.58,0.55,0.51,0.48,-0.44,-0.41,-0.37,-0.34,-0.30],
[2031,-0.63,-0.65,0.62,0.58,0.55,0.51,0.48,0.44,-0.41,-0.37,-0.34,-0.30],
[2140,-0.63,-0.65,0.00,0.58,0.55,0.51,0.48,0.44,-0.41,-0.37,-0.34,-0.30],
[2265,-0.63,-0.65,-0.62,0.58,0.55,0.51,0.48,0.44,0.41,-0.37,-0.34,-0.30],
[2375,-0.63,-0.65,-0.62,0.58,0.55,0.51,0.48,0.44,0.41,0.37,-0.34,-0.30],
[2547,-0.63,-0.65,-0.62,-0.58,0.55,0.51,0.48,0.44,0.41,0.37,0.34,0.30],
[2656,-0.63,-0.65,-0.62,-0.58,0.55,0.51,0.48,0.44,0.41,0.37,0.34,0.30],
[2875,0.63,-0.65,-0.62,-0.58,-0.55,0.51,0.48,0.44,0.41,0.37,0.34,0.30],
[3000,0.63,-0.65,-0.62,-0.58,-0.55,0.51,0.48,0.44,0.41,0.37,0.34,0.30],
[3172,0.63,0.65,-0.62,-0.58,-0.55,-0.51,0.48,0.44,0.41,0.37,0.34,0.30],
[3297,0.63,0.65,0.00,-0.58,-0.55,-0.51,0.00,0.44,0.41,0.37,0.34,0.30],
[3406,0.63,0.65,0.62,-0.58,-0.55,-0.51,-0.48,0.44,0.41,0.37,0.34,0.30],
[3547,0.63,0.65,0.62,-0.58,-0.55,-0.51,-0.48,0.00,0.41,0.37,0.34,0.30],
[3765,0.63,0.65,0.62,0.58,-0.55,-0.51,-0.48,-0.44,-0.41,0.00,0.34,0.30],
[3875,0.63,0.65,0.62,0.58,0.00,-0.51,-0.48,-0.44,-0.41,-0.37,0.00,0.00],
[3984,0.00,0.65,0.62,0.58,0.55,-0.51,-0.48,-0.44,-0.41,-0.37,-0.34,0.00],
[4109,-0.63,0.65,0.62,0.58,0.55,-0.51,-0.48,-0.44,-0.41,-0.37,-0.34,-0.30],
[4265,-0.63,0.00,0.62,0.58,0.55,0.00,-0.48,-0.44,-0.41,-0.37,-0.34,-0.30],
[4484,-0.63,-0.65,0.62,0.58,0.55,0.51,-0.48,-0.44,-0.41,-0.37,-0.34,-0.30],
[4687,-0.63,-0.65,-0.62,0.58,0.55,0.51,0.48,-0.44,-0.41,-0.37,-0.34,-0.30],
[4828,-0.63,-0.65,-0.62,0.58,0.55,0.51,0.48,0.44,-0.41,-0.37,-0.34,-0.30],
[4937,-0.63,-0.65,-0.62,0.00,0.55,0.51,0.48,0.44,0.41,-0.37,-0.34,-0.30],
[5047,-0.63,-0.65,-0.62,-0.58,0.55,0.51,0.48,0.44,0.41,0.37,-0.34,-0.30],
[5172,-0.63,-0.65,-0.62,-0.58,0.55,0.51,0.48,0.44,0.41,0.37,0.34,-0.30],
[5281,-0.63,-0.65,-0.62,-0.58,0.00,0.51,0.48,0.44,0.41,0.37,0.34,0.30],
[5390,0.00,-0.65,-0.62,-0.58,-0.55,0.51,0.48,0.44,0.41,0.37,0.34,0.30],
[5500,0.63,-0.65,-0.62,-0.58,-0.55,0.51,0.48,0.44,0.41,0.37,0.34,0.30],
[5625,0.63,0.00,-0.62,-0.58,-0.55,0.00,0.48,0.44,0.41,0.37,0.34,0.30],
[5750,0.63,0.65,-0.62,-0.58,-0.55,-0.51,0.48,0.44,0.41,0.37,0.34,0.30],
[5859,0.63,0.65,-0.62,-0.58,-0.55,-0.51,0.00,0.44,0.41,0.37,0.34,0.30],
[6109,0.63,0.65,0.62,-0.58,-0.55,-0.51,-0.48,0.00,0.41,0.37,0.34,0.30],
[6328,0.63,0.65,0.62,0.58,-0.55,-0.51,-0.48,-0.44,0.00,0.37,0.34,0.30],
[6453,0.63,0.65,0.62,0.58,-0.55,-0.51,-0.48,-0.44,-0.41,0.00,0.34,0.30],
[6578,0.63,0.65,0.62,0.58,0.55,-0.51,-0.48,-0.44,-0.41,-0.37,0.00,0.00],
[6734,0.00,0.65,0.62,0.58,0.55,-0.51,-0.48,-0.44,-0.41,-0.37,-0.34,0.00]
]

servo_list = [0, 1, 2, 3, 4, 5, 6, 7]
servo_limit = [0, 0, 0, 0, 0, 0, 0, 0]
servo_pos = [0, 0, 0, 0, 0, 0, 0, 0]

activation_array_len = len(activation_array)
if activation_array_len == 0:
   quit()

for i in servo_list:
    limit = 0.0
    for activation in activation_array:
        if abs(activation[i + 1]) > limit:
           limit = abs(activation[i + 1])
    servo_limit[i] = int(limit * activation_scale)
print(servo_limit)

robot_servo = Servo()

step = 0
while step < activation_array_len:
    print("step=", step)
    for i in servo_list:
        delta = 0
        if activation_array[step][i + 1] > 0.0:
           j = 0
           while (step + j) < activation_array_len and activation_array[step + j][i + 1] > 0.0:
                 j = j + 1
           delta = int((servo_limit[i] - servo_pos[i]) / j)
        else:
            if activation_array[step][i + 1] < 0.0:
               j = 0
               while (step + j) < activation_array_len and activation_array[step + j][i + 1] < 0.0:
                     j = j + 1
               delta = int((-servo_limit[i] - servo_pos[i]) / j)
        servo_pos[i] = servo_pos[i] + delta
        robot_servo.set_servo ((11 - i), servo_pos[i])
        print("servo=", (11 - i), "delta=", delta, "pos=", servo_pos[i])
    step = step + 1
    sleep(servo_delay)




